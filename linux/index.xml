<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linuxes on Concept → IO ()</title>
    <link>https://dschrempf.github.io/linux/</link>
    <description>Recent content in Linuxes on Concept → IO ()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 13 Sep 2017 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://dschrempf.github.io/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Networking HOWTOs</title>
      <link>https://dschrempf.github.io/linux/2017-09-13-networking-tutorials/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2017-09-13-networking-tutorials/</guid>
      <description>Sometimes you discover online resources that you want to remember and share. These tutorials by the developers of iptables (mainly Paul &amp;lsquo;Rusty&amp;rsquo; Russell) are one of those gems. They discuss how the internet works, how packets can be adequately filtered and how a firewall can be setup.
Enjoy!</description>
    </item>
    
    <item>
      <title>Marvell Storage Utility on HPE ProLiant MicroServer Gen10</title>
      <link>https://dschrempf.github.io/linux/2017-09-05-hpe-microserver-msu/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2017-09-05-hpe-microserver-msu/</guid>
      <description>Marvell SATA controller Recently I purchased an HPE ProLiant MicroServer Gen10 which comes with the Marvell SATA controller 88SE9230, also called Marvell Storage Utility (MSU). As far as I know, this controller has an ARM chip to provide RAID 0 (non-redundant combination of disks), RAID 1 (straight mirroring) or RAID 10 (a combination of RAID 0 and RAID 1).
Neither Marvell nor HPE do provide drivers for generic Linux systems but they do provide a package for ClearOS which uses the Red Hat Package Manager (RPM).</description>
    </item>
    
    <item>
      <title>Get rid of Google</title>
      <link>https://dschrempf.github.io/linux/2016-08-05-android-without-google/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2016-08-05-android-without-google/</guid>
      <description>I like a lot of stuff that Google is doing, especially that it supports open source. However, I really dislike their attitude towards user privacy. That is why I decided to get rid of Google on my Android phone. However, I had to solve some problems in order to keep user-friendliness at a high level and to be able to use all applications that I need.
The main issues are:</description>
    </item>
    
    <item>
      <title>Autojump</title>
      <link>https://dschrempf.github.io/linux/2016-05-20-autojump/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2016-05-20-autojump/</guid>
      <description>Autojump is a cd command that learns! It enables you to easily navigate directories from the command line:
 Autojump on GitHub  It is readily available in most Linux distributions. The sole thing that has to be done manually is sourcing a script in your .bashrc.
source /etc/profile.d/autojump.sh  Jumping around with j is awesome :-)!</description>
    </item>
    
    <item>
      <title>Configure SSH</title>
      <link>https://dschrempf.github.io/linux/2016-04-09-ssh-config/</link>
      <pubDate>Sat, 09 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2016-04-09-ssh-config/</guid>
      <description>Did you ever get sick of typing the IP of your SSH server. There is an incredible feature of SSH that saves you a lot of time typing host names, IP addresses or passwords.
Login with SSH key First, you want to create your own SSH key so that your server accepts your login without any password.
# Create an SSH key (use the standard path). Be careful, if you do # not set a passphrase, anybody that has access to your computer can # log into servers that have been set up to accept your key.</description>
    </item>
    
    <item>
      <title>exiv2 command line power</title>
      <link>https://dschrempf.github.io/linux/2015-04-25-exiv2-command-line-power/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2015-04-25-exiv2-command-line-power/</guid>
      <description>Does this sound familiar to you: You come back from a holiday with your family or friends and want to merge photos taken with 4 different cameras. However, somebody forgot to adjust the date (or did not set the daylight saving time accordingly). Hmm.
This problem can be solved easily. exiv2 is a program to read and write Exif image metadata and image comments. It offers a very easy command line interface and shortcuts to batch rename files (e.</description>
    </item>
    
    <item>
      <title>Syncthing with SSH Port Forwarding</title>
      <link>https://dschrempf.github.io/linux/2015-04-22-syncthing/</link>
      <pubDate>Wed, 22 Apr 2015 00:00:00 +0200</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2015-04-22-syncthing/</guid>
      <description>Introduction Recently, I have explained how to configure BitTorrent Sync over an SSH SOCKS proxy. However, due to various problems with BTSync, I tried Syncthing and I am very satisfied with it.
Advantages that I have experienced so far:
 open source; publicly available synchronization protocol; very reliable if the configuration is fine; it&amp;rsquo;s a young project with motivated developers; it is fast (if enough CPU is available).  Disadvantages that I have experienced so far:</description>
    </item>
    
    <item>
      <title>BitTorrent Sync over SSH proxy</title>
      <link>https://dschrempf.github.io/linux/2015-01-30-btsync/</link>
      <pubDate>Fri, 30 Jan 2015 00:00:00 +0100</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2015-01-30-btsync/</guid>
      <description>&amp;lt;2015-04-22 Wed&amp;gt;  I have switched from BitTorrent Sync to Syncthing. Reasons are:
 the synchronization was not reliable (synchronization stalled sometimes; every update leads to a re-synchronization of all files); the corporate policy is not to my liking (a Pro version is available; the free version only supports a limited amount of folders and clients; it is not sure if it will stay free in the future).  Please also refer to the blog entry that describes how to configure Syncthing with SSH port forwarding.</description>
    </item>
    
    <item>
      <title>Dateutils</title>
      <link>https://dschrempf.github.io/linux/2015-01-07-dateutils/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0100</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2015-01-07-dateutils/</guid>
      <description>Did you ever need to calculate the time difference between two consecutive time stamps from a log file or something similar? Check out dateutils, it is really useful:
ddiff -i &#39;%H:%M:%S&#39; &#39;19:09:43,683&#39; &#39;19:34:10,350&#39;  </description>
    </item>
    
    <item>
      <title>Zip folders with GNU Parallel</title>
      <link>https://dschrempf.github.io/linux/2015-01-07-gnu-parallel/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0100</pubDate>
      
      <guid>https://dschrempf.github.io/linux/2015-01-07-gnu-parallel/</guid>
      <description>Working with large files takes a long time. Sometimes, it is worth to zip folders individually, so that a single archive does not get too large. GNU Parallel is a shell tool to execute jobs in parallel. Here, I show one of possibly many methods to use it to zip many folders (or files) in parallel.
 Create a file with all folders that you want to zip, e.g with:  ls -1 &amp;gt; folders   Use GNU Parallel to zip them:  parallel -a folders &amp;quot;tar -czf {}.</description>
    </item>
    
  </channel>
</rss>