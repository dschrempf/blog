#+HUGO_BASE_DIR: ../../hugo
#+HUGO_SECTION: Linux
#+HUGO_CATEGORIES: Linux
#+HUGO_TYPE: post
#+TITLE: Configure SSH
#+DATE: <2016-04-09 Sat>
#+AUTHOR: Dominik Schrempf
#+DESCRIPTION: A proper configuration of SSH can save a lot of time (typing passwords, hosts).
#+KEYWORDS: SSH .ssh "SSH Configuration" "SSH Config"
#+LANGUAGE: en

Did you ever get sick of typing the IP of your SSH server.  There is
an incredible feature of SSH that saves you a lot of time typing
host names, IP addresses or passwords.

* Login with SSH key
First, you want to create your own [[https://wiki.archlinux.org/index.php/SSH_keys][SSH key]] so that your server accepts
your login without any password.

#+BEGIN_SRC bash
  # Create an SSH key (use the standard path).  Be careful, if you do
  # not set a passphrase, anybody that has access to your computer can
  # log into servers that have been set up to accept your key.
  ssh-keygen

  # Copy the key on your server.
  ssh-copy-id yourusername@yourserver.example.com

  # Try it out and be happy!
  ssh yourusername@yourserver.example.com
#+END_SRC

* Use =~/.ssh/config=
Now, it is getting better; edit or create the file =~/.ssh.config=:
#+BEGIN_EXAMPLE
  #~/.ssh/config
  Host server
       HostName yourserver.example.com
       User yourusername
#+END_EXAMPLE

Try to log into ~yourserver~ (now aliased ~server~):
#+BEGIN_SRC bash
  ssh server
#+END_SRC
Wow, that was fast.

* ProxyCommand
And it can get better.  Very often, the computer =privatecomputer=
that you want to log in, is only accessible from the local network but
not from the outside.  However, you have access to =server= which,
in turn has access to =private=.

#+BEGIN_SRC ditaa :file ssh-proxy.png :cmdline -r :exports results 
  +------+      +------------------------+      +-----------------------+
  | home |----->| yourserver.example.com |----->| privatecomputer.local |
  |      |      | yourusername           |      | privateusername       |
  |      |      | alias server           |      | alias private         |
  +------+      +------------------------+      +-----------------------+
#+END_SRC

#+RESULTS:
[[file:ssh-proxy.png]]

Hmm, normally, you would need to
#+BEGIN_SRC bash
  # Log into the server.
  ssh yourusername@yourserver.example.com
  # Wait.  Enter password.  Wait.
  ssh privateusername@privatecomputer.local
  # Wait.  Enter password.  Wait.
  # That sucks.
#+END_SRC

We can setup SSH keys so that we do not have to enter passwords
- from =home= to =server= (we already did that);
- from =server= to =privatecomputer.local= (you can do that now,
  if you want).

However, we can also do something much more awesome.  Put this into
your =~/.ssh/config=:
#+BEGIN_EXAMPLE
#~/.ssh/config
  Host server
       HostName yourserver.example.com
       User yourusername

  Host private
       ProxyCommand ssh -q server -W privatecomputer.local:22
       User privateusername
#+END_EXAMPLE

And try it out:
#+BEGIN_SRC bash
  ssh private
#+END_SRC

Wow.
